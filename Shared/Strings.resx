<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppTitle" xml:space="preserve">
    <value>Ratio</value>
  </data>
  <data name="Config" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="IntroBlurb" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet 1 Million Square Feet Lorem ipsum dolor sit amet 1 Million Square Feet Lorem ipsum dolor sit amet 1 Million Square Feet Lorem ipsum dolor sit amet 1 Million Square Feet Lorem ipsum dolor sit amet 1 Million Square Feet.</value>
  </data>
  <data name="more" xml:space="preserve">
    <value>more</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="show" xml:space="preserve">
    <value>show</value>
  </data>
  <data name="Since" xml:space="preserve">
    <value> since December 2013</value>
  </data>
  <data name="ComingSoon" xml:space="preserve">
    <value>Coming Soon</value>
  </data>
  <data name="RSVP" xml:space="preserve">
    <value>RSVP for this event</value>
  </data>
  <data name="PIN" xml:space="preserve">
    <value>PIN TO START</value>
  </data>
  <data name="ExitLink_Fallback_Uri" xml:space="preserve">
    <value>http://www.1msqft.com</value>
  </data>
  <data name="RSVP_Fallback_Uri" xml:space="preserve">
    <value>http://www.1msqft.com</value>
  </data>
  <data name="In" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="UnhandledExceptionTitle" xml:space="preserve">
    <value>Sorry, there was an error.</value>
  </data>
  <data name="SharingFailedDisplayText" xml:space="preserve">
    <value>There is nothing to share right now.</value>
  </data>
  <data name="SharingTitleVideoFromEventFormat" xml:space="preserve">
    <value>Check out this video from {0}</value>
  </data>
  <data name="AboutBlurbFour" xml:space="preserve">
    <value>Yet somehow bigger.</value>
  </data>
  <data name="AboutBlurbOne" xml:space="preserve">
    <value>One Million Square Feet of Culture is a series of guest curated physical spaces that live on through technology.</value>
  </data>
  <data name="AboutBlurbThree" xml:space="preserve">
    <value>There’s no telling what will exist one million square feet from now. Only the size is certain. One million square feet.</value>
  </data>
  <data name="AboutBlurbTwo" xml:space="preserve">
    <value>It is a series of spaces, guest curated by a range of cultural experts. A survey of culture one square foot at a time. It’s square feet for food at an art event. It’s square feet for art at a film event. It’s square feet for film at a fashion event. It’s square feet of culture across all creative disciplines, brought to unexpected places. Physical spaces collected digitally. A gallery of diverse creations, surveyed, shared and held together by digital walls. It’s measurable space, with a touch of the immeasurable.</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>ABOUT RATIO</value>
  </data>
  <data name="ClearStartUpCaps" xml:space="preserve">
    <value>CLEAR STARTUP</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>HOME</value>
  </data>
  <data name="SetAsStartUpCaps" xml:space="preserve">
    <value>SET AS STARTUP</value>
  </data>
  <data name="UNPIN" xml:space="preserve">
    <value>UNPIN FROM START</value>
  </data>
  <data name="ShareEventExhibitUrlFormatRootSlugId" xml:space="preserve">
    <value>{0}/event/{1}/{2}/{3}/{4}</value>
  </data>
  <data name="ShareEventUrlFormatRootSlugId" xml:space="preserve">
    <value>{0}/event/{1}/{2}</value>
  </data>
  <data name="ClearDataCache" xml:space="preserve">
    <value>Clear Data Cache</value>
  </data>
  <data name="PrivacyPolicy" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="PrivacyPolicyUrl" xml:space="preserve">
    <value>http://www.microsoft.com/privacystatement/en-us/core/default.aspx</value>
  </data>
  <data name="Instagram" xml:space="preserve">
    <value>INSTAGRAM</value>
  </data>
  <data name="InstagramUrl" xml:space="preserve">
    <value>http://instagram.com/1msqft</value>
  </data>
  <data name="Twitter" xml:space="preserve">
    <value>TWITTER</value>
  </data>
  <data name="TwitterUrl" xml:space="preserve">
    <value>https://twitter.com/1MSQFT</value>
  </data>
  <data name="InternetConnectionFailureMessage" xml:space="preserve">
    <value>There was a problem connecting to the internet.  Please check your internet connection.</value>
  </data>
  <data name="SiteDataFailureMessage" xml:space="preserve">
    <value>There was a problem connecting to the internet.  Please check your internet connection.</value>
  </data>
  <data name="ClearStartUp" xml:space="preserve">
    <value>Clear Startup</value>
  </data>
  <data name="SetAsStartUp" xml:space="preserve">
    <value>Set as Startup</value>
  </data>
  <data name="Facebook" xml:space="preserve">
    <value>FACEBOOK</value>
  </data>
  <data name="FacebookUrl" xml:space="preserve">
    <value>http://www.facebook.com/1msqft</value>
  </data>
</root>